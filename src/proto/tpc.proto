syntax = "proto3";
import "google/protobuf/empty.proto";
package tpc;

service TpcServer {
    // RPCs for the two phase commit
    rpc TpcPrepare (TransferReq) returns (TransferRes) {}
    rpc TpcCommit (TpcTid) returns (google.protobuf.Empty) {}
    rpc TpcAbort (TpcTid) returns (google.protobuf.Empty) {}

    // RPCs for paxos
    rpc Transfer (TransferReq) returns (TransferRes) {}
    rpc Balance (BalanceReq) returns (BalanceRes) {}
    rpc Logs (google.protobuf.Empty) returns (LogRes) {}
    rpc Prepare (PrepareReq) returns (PrepareRes) {}
    rpc Accept (AcceptReq) returns (AcceptRes) {}
    rpc Commit (CommitReq) returns (google.protobuf.Empty) {}
    rpc Sync (SyncReq) returns (SyncRes) {}
}

message Transaction {
    int32 sender = 1;
    int32 receiver = 2;
    int32 amount = 3;
}

message TpcTid {
    int32 tid = 1;
}

message TransferReq {
    Transaction txn = 1;
    int32 tid = 2;
}

message TransferRes {
    bool ack = 1;
    int32 tid = 2;
}

message BalanceReq {
    int32 client = 1;
}

message BalanceRes {
    int32 amount = 1;
}

message LogRes {
    repeated LogEntry logs = 1;
}

message Ballot {
    int32 num = 1;
    int32 server_id = 2;
}

message PrepareReq {
    Ballot ballot = 1;
    int32 last_inserted = 2;
}

message PrepareRes {
    bool ack = 1;
    Ballot ballot = 2;

    optional Ballot accept_num = 3;
    optional TransferReq accept_val = 4;
    optional int32 last_inserted = 5;
    optional int32 server_id = 6;

}

message AcceptReq {
    Ballot ballot = 1;
    TransferReq r = 2;
}

message AcceptRes {
    bool ack = 1;
    Ballot ballot = 2;
}

message CommitReq {
    Ballot ballot = 1;
}

message SyncReq {
    int32 last_inserted = 1;
}

message LogEntry {
    Transaction txn = 1;
    int32 tid = 2;
    int32 type = 3;
    int32 status = 4;
    int32 ballot_num = 5;
    int32 ballot_server_id = 6;
}

message SyncRes {
    bool ack = 1;
    repeated LogEntry logs = 2;
    Ballot last_inserted_ballot = 3;
}